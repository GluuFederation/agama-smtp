// Verifies the possession of an e-mail address by sending a random passcode
Flow org.gluu.agama.smtp.emailVerification
     Basepath ""
     Inputs email existingAccount context
// Initialize variables
emailObj = {}
sendMail = true
// Get instance email service
emailService = Call org.gluu.agama.smtp.EmailService#getInstance 
// Iterate x times max
Repeat 3 times max
     // When send mail is allowed
     When sendMail is true
          // Tun off send mail
          sendMail = false
          // Call email service to send mail
          otpCode = Call emailService sendEmail email context
          // When OTP code null
          When otpCode is null
               // Variable assignment for unsuccessful Email delivery
               emailObj = { success: false, error: "Unable to deliver e-mail message" }
               // Finish flow unsuccessfully
               Finish emailObj
          // Variable assignment after successful email delivery
          emailObj.email = email
          emailObj.accountExists = existingAccount
          // Redirect to page asking for OTP received using email
          uiInput = RRF "otp.ftlh" emailObj
          // If user clicked on "resend code" button
          When uiInput.resend is ""
               // Variable assignment when user clicked on "resend code" button
               sendMail = true
               uiInput.resent = true
          // When passcode entered by user matches
          When uiInput.passcode is otpCode
               Finish true
          // Variable assigned when OTP entered by user does not matches
          uiInput.matches = false
          uiInput.resent = false
// Variable assignment when user exceeds the number of attempts allowed
obj = { success: false, error: "You have exceeded the number of attempts allowed" }
// Finish flow when user exceeds maximum number of flows allowed
Finish obj